server {
    listen   80 default_server; ## listen for ipv4; this line is default and implied

    root /app/public;
    index index.php index.html index.htm;

    # Make site accessible from http://localhost/
    server_name _;

    set $x_request_id $request_id;

    if ($http_x_amz_cf_id != '') {
        set $x_request_id $http_x_amz_cf_id;
    }
    if ($http_x_request_id != '') {
        set $x_request_id $http_x_request_id;
    }

    add_header X-Request-Id $x_request_id; # Return to client

    # Microcaching
    fastcgi_cache cache;
    fastcgi_cache_valid 200 1s; # Cache 200 responses for 1 second
    fastcgi_cache_lock on;
    fastcgi_cache_key $request_method$request_uri$http_authorization;
    fastcgi_cache_use_stale updating;

    error_log /dev/stderr notice;
    access_log /dev/stdout trace;
    etag off;

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to index.html
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location = /favicon.ico {
        return 204;
        access_log     off;
        log_not_found  off;
    }

    location /nginx_status {
        stub_status;
        access_log   off;
    }

    # pass the PHP scripts to FastCGI server listening on socket
    #
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include fastcgi_params;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_param SERVER_NAME $host;
        fastcgi_param HTTP_X_REQUEST_ID $x_request_id;
        fastcgi_index index.php;
    }

    # deny access to . files, for security
    #
    location ~ /\. {
        log_not_found off;
        deny all;
    }

}